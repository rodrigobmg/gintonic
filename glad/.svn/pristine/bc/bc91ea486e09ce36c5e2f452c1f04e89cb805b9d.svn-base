module glad.glx.funcs;


private import glad.glx.types;
nothrow extern(System) {
alias fp_glXChooseVisual = XVisualInfo* function(Display*, int, int*);
alias fp_glXCreateContext = GLXContext function(Display*, XVisualInfo*, GLXContext, Bool);
alias fp_glXDestroyContext = void function(Display*, GLXContext);
alias fp_glXMakeCurrent = Bool function(Display*, GLXDrawable, GLXContext);
alias fp_glXCopyContext = void function(Display*, GLXContext, GLXContext, ulong);
alias fp_glXSwapBuffers = void function(Display*, GLXDrawable);
alias fp_glXCreateGLXPixmap = GLXPixmap function(Display*, XVisualInfo*, Pixmap);
alias fp_glXDestroyGLXPixmap = void function(Display*, GLXPixmap);
alias fp_glXQueryExtension = Bool function(Display*, int*, int*);
alias fp_glXQueryVersion = Bool function(Display*, int*, int*);
alias fp_glXIsDirect = Bool function(Display*, GLXContext);
alias fp_glXGetConfig = int function(Display*, XVisualInfo*, int, int*);
alias fp_glXGetCurrentContext = GLXContext function();
alias fp_glXGetCurrentDrawable = GLXDrawable function();
alias fp_glXWaitGL = void function();
alias fp_glXWaitX = void function();
alias fp_glXUseXFont = void function(Font, int, int, int);
alias fp_glXQueryExtensionsString = const(char)* function(Display*, int);
alias fp_glXQueryServerString = const(char)* function(Display*, int, int);
alias fp_glXGetClientString = const(char)* function(Display*, int);
alias fp_glXGetCurrentDisplay = Display* function();
alias fp_glXGetFBConfigs = GLXFBConfig* function(Display*, int, int*);
alias fp_glXChooseFBConfig = GLXFBConfig* function(Display*, int, const(int)*, int*);
alias fp_glXGetFBConfigAttrib = int function(Display*, GLXFBConfig, int, int*);
alias fp_glXGetVisualFromFBConfig = XVisualInfo* function(Display*, GLXFBConfig);
alias fp_glXCreateWindow = GLXWindow function(Display*, GLXFBConfig, Window, const(int)*);
alias fp_glXDestroyWindow = void function(Display*, GLXWindow);
alias fp_glXCreatePixmap = GLXPixmap function(Display*, GLXFBConfig, Pixmap, const(int)*);
alias fp_glXDestroyPixmap = void function(Display*, GLXPixmap);
alias fp_glXCreatePbuffer = GLXPbuffer function(Display*, GLXFBConfig, const(int)*);
alias fp_glXDestroyPbuffer = void function(Display*, GLXPbuffer);
alias fp_glXQueryDrawable = void function(Display*, GLXDrawable, int, uint*);
alias fp_glXCreateNewContext = GLXContext function(Display*, GLXFBConfig, int, GLXContext, Bool);
alias fp_glXMakeContextCurrent = Bool function(Display*, GLXDrawable, GLXDrawable, GLXContext);
alias fp_glXGetCurrentReadDrawable = GLXDrawable function();
alias fp_glXQueryContext = int function(Display*, GLXContext, int, int*);
alias fp_glXSelectEvent = void function(Display*, GLXDrawable, ulong);
alias fp_glXGetSelectedEvent = void function(Display*, GLXDrawable, ulong*);
alias fp_glXGetProcAddress = __GLXextFuncPtr function(const(GLubyte)*);
}
__gshared {
fp_glXGetSelectedEvent glXGetSelectedEvent;
fp_glXQueryExtension glXQueryExtension;
fp_glXMakeCurrent glXMakeCurrent;
fp_glXSelectEvent glXSelectEvent;
fp_glXCreateContext glXCreateContext;
fp_glXCreateGLXPixmap glXCreateGLXPixmap;
fp_glXQueryVersion glXQueryVersion;
fp_glXGetCurrentReadDrawable glXGetCurrentReadDrawable;
fp_glXDestroyPixmap glXDestroyPixmap;
fp_glXGetCurrentContext glXGetCurrentContext;
fp_glXGetProcAddress glXGetProcAddress;
fp_glXWaitGL glXWaitGL;
fp_glXIsDirect glXIsDirect;
fp_glXDestroyWindow glXDestroyWindow;
fp_glXCreateWindow glXCreateWindow;
fp_glXCopyContext glXCopyContext;
fp_glXCreatePbuffer glXCreatePbuffer;
fp_glXSwapBuffers glXSwapBuffers;
fp_glXGetCurrentDisplay glXGetCurrentDisplay;
fp_glXGetCurrentDrawable glXGetCurrentDrawable;
fp_glXQueryContext glXQueryContext;
fp_glXChooseVisual glXChooseVisual;
fp_glXQueryServerString glXQueryServerString;
fp_glXDestroyContext glXDestroyContext;
fp_glXDestroyGLXPixmap glXDestroyGLXPixmap;
fp_glXGetFBConfigAttrib glXGetFBConfigAttrib;
fp_glXUseXFont glXUseXFont;
fp_glXDestroyPbuffer glXDestroyPbuffer;
fp_glXChooseFBConfig glXChooseFBConfig;
fp_glXCreateNewContext glXCreateNewContext;
fp_glXMakeContextCurrent glXMakeContextCurrent;
fp_glXGetConfig glXGetConfig;
fp_glXGetFBConfigs glXGetFBConfigs;
fp_glXCreatePixmap glXCreatePixmap;
fp_glXWaitX glXWaitX;
fp_glXGetVisualFromFBConfig glXGetVisualFromFBConfig;
fp_glXQueryDrawable glXQueryDrawable;
fp_glXQueryExtensionsString glXQueryExtensionsString;
fp_glXGetClientString glXGetClientString;
}
