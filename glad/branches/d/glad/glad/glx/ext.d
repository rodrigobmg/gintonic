module glad.glx.ext;


private import glad.glx.types;
private import glad.glx.enums;
private import glad.glx.funcs;
nothrow extern(System) {
alias fp_glXGetCurrentDisplayEXT = Display* function();
alias fp_glXQueryContextInfoEXT = int function(Display*, GLXContext, int, int*);
alias fp_glXGetContextIDEXT = GLXContextID function(const(GLXContext));
alias fp_glXImportContextEXT = GLXContext function(Display*, GLXContextID);
alias fp_glXFreeContextEXT = void function(Display*, GLXContext);
alias fp_glXAssociateDMPbufferSGIX = Bool function(Display*, GLXPbufferSGIX, DMparams*, DMbuffer);
alias fp_glXCreateGLXPbufferSGIX = GLXPbufferSGIX function(Display*, GLXFBConfigSGIX, uint, uint, int*);
alias fp_glXDestroyGLXPbufferSGIX = void function(Display*, GLXPbufferSGIX);
alias fp_glXQueryGLXPbufferSGIX = int function(Display*, GLXPbufferSGIX, int, uint*);
alias fp_glXSelectEventSGIX = void function(Display*, GLXDrawable, ulong);
alias fp_glXGetSelectedEventSGIX = void function(Display*, GLXDrawable, ulong*);
alias fp_glXQueryHyperpipeNetworkSGIX = GLXHyperpipeNetworkSGIX* function(Display*, int*);
alias fp_glXHyperpipeConfigSGIX = int function(Display*, int, int, GLXHyperpipeConfigSGIX*, int*);
alias fp_glXQueryHyperpipeConfigSGIX = GLXHyperpipeConfigSGIX* function(Display*, int, int*);
alias fp_glXDestroyHyperpipeConfigSGIX = int function(Display*, int);
alias fp_glXBindHyperpipeSGIX = int function(Display*, int);
alias fp_glXQueryHyperpipeBestAttribSGIX = int function(Display*, int, int, int, void*, void*);
alias fp_glXHyperpipeAttribSGIX = int function(Display*, int, int, int, void*);
alias fp_glXQueryHyperpipeAttribSGIX = int function(Display*, int, int, int, void*);
alias fp_glXSet3DfxModeMESA = Bool function(int);
alias fp_glXBindChannelToWindowSGIX = int function(Display*, int, int, Window);
alias fp_glXChannelRectSGIX = int function(Display*, int, int, int, int, int, int);
alias fp_glXQueryChannelRectSGIX = int function(Display*, int, int, int*, int*, int*, int*);
alias fp_glXQueryChannelDeltasSGIX = int function(Display*, int, int, int*, int*, int*, int*);
alias fp_glXChannelRectSyncSGIX = int function(Display*, int, int, GLenum);
alias fp_glXCreateGLXPixmapMESA = GLXPixmap function(Display*, XVisualInfo*, Pixmap, Colormap);
alias fp_glXCopyImageSubDataNV = void function(Display*, GLXContext, GLuint, GLenum, GLint, GLint, GLint, GLint, GLXContext, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei);
alias fp_glXJoinSwapGroupNV = Bool function(Display*, GLXDrawable, GLuint);
alias fp_glXBindSwapBarrierNV = Bool function(Display*, GLuint, GLuint);
alias fp_glXQuerySwapGroupNV = Bool function(Display*, GLXDrawable, GLuint*, GLuint*);
alias fp_glXQueryMaxSwapGroupsNV = Bool function(Display*, int, GLuint*, GLuint*);
alias fp_glXQueryFrameCountNV = Bool function(Display*, int, GLuint*);
alias fp_glXResetFrameCountNV = Bool function(Display*, int);
alias fp_glXGetSyncValuesOML = Bool function(Display*, GLXDrawable, int64_t*, int64_t*, int64_t*);
alias fp_glXGetMscRateOML = Bool function(Display*, GLXDrawable, int32_t*, int32_t*);
alias fp_glXSwapBuffersMscOML = int64_t function(Display*, GLXDrawable, int64_t, int64_t, int64_t);
alias fp_glXWaitForMscOML = Bool function(Display*, GLXDrawable, int64_t, int64_t, int64_t, int64_t*, int64_t*, int64_t*);
alias fp_glXWaitForSbcOML = Bool function(Display*, GLXDrawable, int64_t, int64_t*, int64_t*, int64_t*);
alias fp_glXGetVideoSyncSGI = int function(uint*);
alias fp_glXWaitVideoSyncSGI = int function(int, int, uint*);
alias fp_glXBindVideoCaptureDeviceNV = int function(Display*, uint, GLXVideoCaptureDeviceNV);
alias fp_glXEnumerateVideoCaptureDevicesNV = GLXVideoCaptureDeviceNV* function(Display*, int, int*);
alias fp_glXLockVideoCaptureDeviceNV = void function(Display*, GLXVideoCaptureDeviceNV);
alias fp_glXQueryVideoCaptureDeviceNV = int function(Display*, GLXVideoCaptureDeviceNV, int, int*);
alias fp_glXReleaseVideoCaptureDeviceNV = void function(Display*, GLXVideoCaptureDeviceNV);
alias fp_glXBindTexImageEXT = void function(Display*, GLXDrawable, int, const(int)*);
alias fp_glXReleaseTexImageEXT = void function(Display*, GLXDrawable, int);
alias fp_glXGetVideoDeviceNV = int function(Display*, int, int, GLXVideoDeviceNV*);
alias fp_glXReleaseVideoDeviceNV = int function(Display*, int, GLXVideoDeviceNV);
alias fp_glXBindVideoImageNV = int function(Display*, GLXVideoDeviceNV, GLXPbuffer, int);
alias fp_glXReleaseVideoImageNV = int function(Display*, GLXPbuffer);
alias fp_glXSendPbufferToVideoNV = int function(Display*, GLXPbuffer, int, ulong*, GLboolean);
alias fp_glXGetVideoInfoNV = int function(Display*, int, GLXVideoDeviceNV, ulong*, ulong*);
alias fp_glXDelayBeforeSwapNV = Bool function(Display*, GLXDrawable, GLfloat);
alias fp_glXMakeCurrentReadSGI = Bool function(Display*, GLXDrawable, GLXDrawable, GLXContext);
alias fp_glXGetCurrentReadDrawableSGI = GLXDrawable function();
alias fp_glXJoinSwapGroupSGIX = void function(Display*, GLXDrawable, GLXDrawable);
alias fp_glXSwapIntervalEXT = void function(Display*, GLXDrawable, int);
alias fp_glXCreateGLXVideoSourceSGIX = GLXVideoSourceSGIX function(Display*, int, VLServer, VLPath, int, VLNode);
alias fp_glXDestroyGLXVideoSourceSGIX = void function(Display*, GLXVideoSourceSGIX);
alias fp_glXQueryCurrentRendererIntegerMESA = Bool function(int, uint*);
alias fp_glXQueryCurrentRendererStringMESA = const(char)* function(int);
alias fp_glXQueryRendererIntegerMESA = Bool function(Display*, int, int, int, uint*);
alias fp_glXQueryRendererStringMESA = const(char)* function(Display*, int, int, int);
alias fp_glXCreateContextAttribsARB = GLXContext function(Display*, GLXFBConfig, GLXContext, Bool, const(int)*);
alias fp_glXSwapIntervalSGI = int function(int);
alias fp_glXGetFBConfigAttribSGIX = int function(Display*, GLXFBConfigSGIX, int, int*);
alias fp_glXChooseFBConfigSGIX = GLXFBConfigSGIX* function(Display*, int, int*, int*);
alias fp_glXCreateGLXPixmapWithConfigSGIX = GLXPixmap function(Display*, GLXFBConfigSGIX, Pixmap);
alias fp_glXCreateContextWithConfigSGIX = GLXContext function(Display*, GLXFBConfigSGIX, int, GLXContext, Bool);
alias fp_glXGetVisualFromFBConfigSGIX = XVisualInfo* function(Display*, GLXFBConfigSGIX);
alias fp_glXGetFBConfigFromVisualSGIX = GLXFBConfigSGIX function(Display*, XVisualInfo*);
alias fp_glXCushionSGI = void function(Display*, Window, float);
alias fp_glXReleaseBuffersMESA = Bool function(Display*, GLXDrawable);
alias fp_glXCopySubBufferMESA = void function(Display*, GLXDrawable, int, int, int, int);
alias fp_glXGetAGPOffsetMESA = uint function(const(void)*);
alias fp_glXCopyBufferSubDataNV = void function(Display*, GLXContext, GLXContext, GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr);
alias fp_glXNamedCopyBufferSubDataNV = void function(Display*, GLXContext, GLXContext, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr);
alias fp_glXEnumerateVideoDevicesNV = uint* function(Display*, int, int*);
alias fp_glXBindVideoDeviceNV = int function(Display*, uint, uint, const(int)*);
alias fp_glXGetTransparentIndexSUN = Status function(Display*, Window, Window, long*);
alias fp_glXGetGPUIDsAMD = uint function(uint, uint*);
alias fp_glXGetGPUInfoAMD = int function(uint, int, GLenum, uint, void*);
alias fp_glXGetContextGPUIDAMD = uint function(GLXContext);
alias fp_glXCreateAssociatedContextAMD = GLXContext function(uint, GLXContext);
alias fp_glXCreateAssociatedContextAttribsAMD = GLXContext function(uint, GLXContext, const(int)*);
alias fp_glXDeleteAssociatedContextAMD = Bool function(GLXContext);
alias fp_glXMakeAssociatedContextCurrentAMD = Bool function(GLXContext);
alias fp_glXGetCurrentAssociatedContextAMD = GLXContext function();
alias fp_glXBlitContextFramebufferAMD = void function(GLXContext, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
alias fp_glXBindSwapBarrierSGIX = void function(Display*, GLXDrawable, int);
alias fp_glXQueryMaxSwapBarriersSGIX = Bool function(Display*, int, int*);
alias fp_glXGetProcAddressARB = __GLXextFuncPtr function(const(GLubyte)*);
}
__gshared {
fp_glXGetContextIDEXT glXGetContextIDEXT;
fp_glXBindSwapBarrierNV glXBindSwapBarrierNV;
fp_glXBindVideoCaptureDeviceNV glXBindVideoCaptureDeviceNV;
fp_glXLockVideoCaptureDeviceNV glXLockVideoCaptureDeviceNV;
fp_glXSendPbufferToVideoNV glXSendPbufferToVideoNV;
fp_glXBindVideoImageNV glXBindVideoImageNV;
fp_glXReleaseTexImageEXT glXReleaseTexImageEXT;
fp_glXJoinSwapGroupNV glXJoinSwapGroupNV;
fp_glXCreateAssociatedContextAMD glXCreateAssociatedContextAMD;
fp_glXSwapIntervalSGI glXSwapIntervalSGI;
fp_glXReleaseVideoImageNV glXReleaseVideoImageNV;
fp_glXCreateGLXVideoSourceSGIX glXCreateGLXVideoSourceSGIX;
fp_glXResetFrameCountNV glXResetFrameCountNV;
fp_glXBindChannelToWindowSGIX glXBindChannelToWindowSGIX;
fp_glXCreateGLXPixmapWithConfigSGIX glXCreateGLXPixmapWithConfigSGIX;
fp_glXQueryContextInfoEXT glXQueryContextInfoEXT;
fp_glXChooseFBConfigSGIX glXChooseFBConfigSGIX;
fp_glXQueryCurrentRendererIntegerMESA glXQueryCurrentRendererIntegerMESA;
fp_glXWaitForSbcOML glXWaitForSbcOML;
fp_glXCreateAssociatedContextAttribsAMD glXCreateAssociatedContextAttribsAMD;
fp_glXQueryHyperpipeConfigSGIX glXQueryHyperpipeConfigSGIX;
fp_glXCushionSGI glXCushionSGI;
fp_glXSwapIntervalEXT glXSwapIntervalEXT;
fp_glXQueryMaxSwapGroupsNV glXQueryMaxSwapGroupsNV;
fp_glXQueryHyperpipeAttribSGIX glXQueryHyperpipeAttribSGIX;
fp_glXQueryRendererIntegerMESA glXQueryRendererIntegerMESA;
fp_glXQueryMaxSwapBarriersSGIX glXQueryMaxSwapBarriersSGIX;
fp_glXGetSelectedEventSGIX glXGetSelectedEventSGIX;
fp_glXGetVisualFromFBConfigSGIX glXGetVisualFromFBConfigSGIX;
fp_glXGetFBConfigFromVisualSGIX glXGetFBConfigFromVisualSGIX;
fp_glXCreateContextAttribsARB glXCreateContextAttribsARB;
fp_glXQueryRendererStringMESA glXQueryRendererStringMESA;
fp_glXChannelRectSyncSGIX glXChannelRectSyncSGIX;
fp_glXWaitVideoSyncSGI glXWaitVideoSyncSGI;
fp_glXSelectEventSGIX glXSelectEventSGIX;
fp_glXDelayBeforeSwapNV glXDelayBeforeSwapNV;
fp_glXImportContextEXT glXImportContextEXT;
fp_glXGetContextGPUIDAMD glXGetContextGPUIDAMD;
fp_glXJoinSwapGroupSGIX glXJoinSwapGroupSGIX;
fp_glXAssociateDMPbufferSGIX glXAssociateDMPbufferSGIX;
fp_glXGetVideoInfoNV glXGetVideoInfoNV;
fp_glXGetCurrentAssociatedContextAMD glXGetCurrentAssociatedContextAMD;
fp_glXGetSyncValuesOML glXGetSyncValuesOML;
fp_glXBlitContextFramebufferAMD glXBlitContextFramebufferAMD;
fp_glXReleaseVideoCaptureDeviceNV glXReleaseVideoCaptureDeviceNV;
fp_glXQueryFrameCountNV glXQueryFrameCountNV;
fp_glXDeleteAssociatedContextAMD glXDeleteAssociatedContextAMD;
fp_glXQueryChannelRectSGIX glXQueryChannelRectSGIX;
fp_glXGetCurrentDisplayEXT glXGetCurrentDisplayEXT;
fp_glXSet3DfxModeMESA glXSet3DfxModeMESA;
fp_glXGetGPUIDsAMD glXGetGPUIDsAMD;
fp_glXGetFBConfigAttribSGIX glXGetFBConfigAttribSGIX;
fp_glXQueryChannelDeltasSGIX glXQueryChannelDeltasSGIX;
fp_glXCreateGLXPbufferSGIX glXCreateGLXPbufferSGIX;
fp_glXCreateContextWithConfigSGIX glXCreateContextWithConfigSGIX;
fp_glXQueryVideoCaptureDeviceNV glXQueryVideoCaptureDeviceNV;
fp_glXNamedCopyBufferSubDataNV glXNamedCopyBufferSubDataNV;
fp_glXEnumerateVideoCaptureDevicesNV glXEnumerateVideoCaptureDevicesNV;
fp_glXGetGPUInfoAMD glXGetGPUInfoAMD;
fp_glXGetVideoSyncSGI glXGetVideoSyncSGI;
fp_glXHyperpipeConfigSGIX glXHyperpipeConfigSGIX;
fp_glXBindVideoDeviceNV glXBindVideoDeviceNV;
fp_glXBindTexImageEXT glXBindTexImageEXT;
fp_glXHyperpipeAttribSGIX glXHyperpipeAttribSGIX;
fp_glXQueryHyperpipeBestAttribSGIX glXQueryHyperpipeBestAttribSGIX;
fp_glXMakeAssociatedContextCurrentAMD glXMakeAssociatedContextCurrentAMD;
fp_glXReleaseVideoDeviceNV glXReleaseVideoDeviceNV;
fp_glXDestroyGLXPbufferSGIX glXDestroyGLXPbufferSGIX;
fp_glXBindHyperpipeSGIX glXBindHyperpipeSGIX;
fp_glXQueryCurrentRendererStringMESA glXQueryCurrentRendererStringMESA;
fp_glXMakeCurrentReadSGI glXMakeCurrentReadSGI;
fp_glXGetAGPOffsetMESA glXGetAGPOffsetMESA;
fp_glXQuerySwapGroupNV glXQuerySwapGroupNV;
fp_glXBindSwapBarrierSGIX glXBindSwapBarrierSGIX;
fp_glXGetProcAddressARB glXGetProcAddressARB;
fp_glXDestroyGLXVideoSourceSGIX glXDestroyGLXVideoSourceSGIX;
fp_glXCopySubBufferMESA glXCopySubBufferMESA;
fp_glXCopyBufferSubDataNV glXCopyBufferSubDataNV;
fp_glXChannelRectSGIX glXChannelRectSGIX;
fp_glXFreeContextEXT glXFreeContextEXT;
fp_glXWaitForMscOML glXWaitForMscOML;
fp_glXGetTransparentIndexSUN glXGetTransparentIndexSUN;
fp_glXEnumerateVideoDevicesNV glXEnumerateVideoDevicesNV;
fp_glXCreateGLXPixmapMESA glXCreateGLXPixmapMESA;
fp_glXGetMscRateOML glXGetMscRateOML;
fp_glXGetCurrentReadDrawableSGI glXGetCurrentReadDrawableSGI;
fp_glXReleaseBuffersMESA glXReleaseBuffersMESA;
fp_glXCopyImageSubDataNV glXCopyImageSubDataNV;
fp_glXQueryHyperpipeNetworkSGIX glXQueryHyperpipeNetworkSGIX;
fp_glXGetVideoDeviceNV glXGetVideoDeviceNV;
fp_glXDestroyHyperpipeConfigSGIX glXDestroyHyperpipeConfigSGIX;
fp_glXSwapBuffersMscOML glXSwapBuffersMscOML;
fp_glXQueryGLXPbufferSGIX glXQueryGLXPbufferSGIX;
}
